dist: bionic
language: minimal
sudo: false
# Default `language: rust` has problems on nightly with rustfmt support

# only cache cargo subcommand binaries and .so libs
# the build artifacts take a lot of space and are slower to
# cache than to actually rebuild anyway...
# We need to cache the whole .cargo directory to keep the
# .crates.toml file.
cache:
  directories:
    - /home/travis/install
    - /home/travis/.cargo

# But don't cache the cargo registry
before_cache:
  - rm -rf "$HOME"/.cargo/registry
before_script:
  - |
    export PATH="$HOME/.cargo/bin:$PATH"
    TRAVIS_RUST_VERSION="${TRAVIS_RUST_VERSION:-nightly}"
    if [ "$TRAVIS_RUST_VERSION" = 'nightly' ]; then
       printf -v RUSTFMT_VERSION '%s%s' '-' "$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/rustfmt)"
       printf -v CLIPPY_VERSION '%s%s' '-' "$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/clippy)"
       SMALLEST_COMPAT_RUST="$([[ "$RUSTFMT_VERSION" < "$CLIPPY_VERSION" ]] && echo "$RUSTFMT_VERSION" || echo "$CLIPPY_VERSION")"

       if command -v rustup 2>/dev/null; then
           rustup default "${TRAVIS_RUST_VERSION}${SMALLEST_COMPAT_RUST}"
       else
           curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain "${TRAVIS_RUST_VERSION}${SMALLEST_COMPAT_RUST}"
       fi
    fi
    if command -v cargo >/dev/null; then
      export PATH="$HOME/.cargo/bin:$PATH"
      export XDG_RUNTIME_DIR="$PWD"'/socket'
      mkdir "$XDG_RUNTIME_DIR"
      cargo fetch
      rustup component add rustfmt
    fi
    if [ -n "$CLIPPY" ]; then
      rustup component add clippy --toolchain "${TRAVIS_RUST_VERSION}${SMALLEST_COMPAT_RUST}"
    elif [ -n "$BUILD_FMT" ]; then
      rustup component add rustfmt --toolchain "${TRAVIS_RUST_VERSION}${SMALLEST_COMPAT_RUST}"
    fi
script:
  - |
    if [ -n "$BUILD_FMT" ]; then
      cargo fmt --all -- --check
      # rustfmt --check # With: `src/*.rs` xor `"$(find -name '*.rs' -not -path './target/*')"`
    elif [ -n "$CLIPPY" ]; then
      cargo clippy --all -- -D warnings
    elif [ -n "$CARGO_TEST" ]; then
      cargo test --all --features "$FEATURES"
    fi

matrix:
  include:
    - rust: stable
      env: BUILD_FMT=1
    - rust: stable
      env: CLIPPY=1
    - rust: stable
      env: CARGO_TEST=1
    - stage: notify-website
      env:
        secure: 'OyIbvspZBwyLu4SdnE72XyqU1900ILAiIgatglUoPrXSSxI/57pd2u6GMdzfXwb3m/nJWeLQr3Dz+daUkme+qqkdXiRD8vWOSzy2XKkpif6yNVfjDcYfDAEMUyhhQrCO5a/pd7x9TSBeXtT33VJKB91cG0sFRTJ3iE72LzkJ8lXokr4pSKmRmgoShvoUymf2Vva0Wfo7grvzjw5gAJPPwS4/LG61tjoRuY1sOnDG3tb6rEpxC02LTnhVgNm9AYpbIfWVrR/D3z9awhR0wEUSv5LsX7PjZ+l04JdtYl99e9vks65rSlsPn5ZEG9RgV5IDtQqfvPazcHE9PdMQgsDVSa8tVD8ceMKXgc/BAf/3UDZELfmjrRw4dJmvShHj6SGgy9gcp80WDIi+1pcX+KwlcGh9I0LwASyFEdDzqO8EQuvTNVnMwLgc2ILbr5Nj3kOwlkjw/sMyDl+Jj3pdj3rrTe7eLZuVgYpPcjqdasPaQ4Nc+CUkGQZPi1azzU4Nu8kKqzEywgBd98JCxcCoYNDMajfAtZjpvtpskAItK2/FHX61Da3udLp0A4im+K6uBCYNaafNhnoYqiwnjcQtM6ssjkkftytr7QwcU3Efuq0TfwtkF+aTUt2ELd5fGxlK58EmorqVv4Jmg+TO+mqDuxYQA7HDH+e6ffJeYUg3UqA1tsg='
      script:
        - email_author="$(git log -1 --pretty=format:'%an <%ce>')"
        - author="${email_author% *}"; git config --global user.name "$author"
        - email="${email_author#*<}"; email="${email::-1}"; git config --global user.email "$email"
        - git clone https://SamuelMarks:$GH_TOKEN@github.com/Fantom-foundation/fantom-dev-web
          && cd fantom-dev-web
        - echo "  | [$TRAVIS_REPO_SLUG](https://github.com/$TRAVIS_REPO_SLUG) | [$TRAVIS_COMMIT_MESSAGE](https://github.com/$TRAVIS_REPO_SLUG/commit/$TRAVIS_COMMIT) |" >> CHANGESLOG.md
        - git add CHANGESLOG.md
        - git commit -m "[CHANGESLOG.md] $TRAVIS_REPO_SLUG - $TRAVIS_COMMIT_MESSAGE" 
        - git push -u origin master
